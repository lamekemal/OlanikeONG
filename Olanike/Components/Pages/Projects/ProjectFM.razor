@page "/Project01"
@layout Olanike.Components.Layout.BaseLayout
@inject NavigationManager _navigationManager
@inject ILogger<Index> Logger
@inject ApplicationDbContext dbContext
@inject IJSRuntime jsRuntime
<PageTitle>Olanike - Projet</PageTitle>
<!-- start section -->
<!-- start section -->
<section class="cover-background full-screen ipad-top-space-margin md-h-550px" style="background-image: url(images/404-bg.jpg);">
    <div class="container h-100">
        <div class="row align-items-center justify-content-center h-100">
            <div class="col-12 col-xl-6 col-lg-7 col-md-9 text-center" data-anime='{ "el": "childs", "translateY": [50, 0], "opacity": [0,1], "duration": 600, "delay": 0, "staggervalue": 300, "easing": "easeOutQuad" }'>
                <h6 class="text-dark-gray fw-600 mb-5px text-uppercase">Ooops!</h6>
                <h4 class="text-dark-gray fw-600 sm-fs-22 mb-10px ls-minus-1px">Bientôt disponible</h4>
                <p class="mb-30px lh-28 sm-mb-30px w-55 md-w-80 sm-w-95 mx-auto">Notre page projet est en construction... 😒</p>
                <a href="/" class="btn btn-large left-icon btn-rounded btn-dark-gray btn-box-shadow text-transform-none"><i class="fa-solid fa-arrow-left"></i>Accueil</a>
            </div>
        </div>
    </div>
</section>
<!-- end section -->
<!-- end section -->

@code {
    protected override Task OnInitializedAsync()
    {
        StateHasChanged();
        Task.Delay(1);
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _navigationManager.Refresh();
        }
        await jsRuntime.InvokeVoidAsync("reloadIt");
        StateHasChanged();
        await Task.Delay(1);
        return;
    }
}
